<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArticleLongHairdreamsParagraph1" xml:space="preserve">
    <value>Milieufactoren, stress en chemische behandelingen hebben een invloed op de kwaliteit van uw haren. Ermee rekening houdend dat haar ook regelmatig moet geknipt worden om gezond te houden kan het lang duren (haar groeit ca. 1 cm per maand) vooraleer de droom van lang en gezond natuurlijk haar wordt verwezenlijkt. Vergeet daarnaast ook niet dat natuurlijke aanleg en eetgewoonten een belangrijke rol spelen.</value>
  </data>
  <data name="ArticleLongHairdreamsParagraph2" xml:space="preserve">
    <value>Veel vrouwen geloven niet dat “extensies” de oplossing bieden voor hun problemen, want het lijkt onnatuurlijk of beschadigd het haar. Wat meer is, ze gaan ervan uit dat iedereen kan zien dat het haar kunstmatig is...</value>
  </data>
  <data name="ArticleLongHairdreamsParagraph3" xml:space="preserve">
    <value>Niets is minder waar…</value>
  </data>
  <data name="ArticleLongHairdreamsSolution" xml:space="preserve">
    <value>Hairdreams biedt de oplossing</value>
  </data>
  <data name="ArticleLongHairdreamsSolutionParagraph" xml:space="preserve">
    <value>Hairdreams haarcreaties bieden nu sneller en eenvoudiger dan ooit een antwoord op al uw dromen. De strengen zijn vrijwel niet te onderscheiden van natuurlijk haar en kunnen in slechts een paar uur worden aangebracht. U kunt nu naar wens lengte en volume aan uw haar toevoegen en vrijwel elk droomkapsel bekomen.</value>
  </data>
  <data name="ArticleLongHairdreamsSubTitle" xml:space="preserve">
    <value>Lang haar is altijd al de belichaming van vrouwelijke schoonheid geweest. Er is nog niets veranderd, maar tijdens het nastreven van deze droom wordt men vaak met diverse obstakels geconfronteerd.</value>
  </data>
  <data name="ArticleLongHairdreamsTitle" xml:space="preserve">
    <value>Hairdreams laat u dromen over lang haar</value>
  </data>
  <data name="LongHairdreams" xml:space="preserve">
    <value>Long Hairdreams</value>
  </data>
  <data name="LongHairdreamsText" xml:space="preserve">
    <value>"Extenties" behoren tot het verleden. Nu is het tijd om kapsels te "creëren"!
Haarverlenging op het hoogste niveau met 100% echt menselijk haar.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Hairdreams haarverlengingen</value>
  </data>
</root>