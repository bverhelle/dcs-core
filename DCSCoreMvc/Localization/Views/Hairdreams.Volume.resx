<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" 
    xmlns="" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Highlines" xml:space="preserve">
    <value>Highlines</value>
  </data>
  <data name="HighlinesIntroText" xml:space="preserve">
    <value>De Hairdreams Highlines geeft volume aan dun en schaars haar in het bovenste deel van het hoofd door op het eigen haar van de klant een speciaal onzichtbaar net te plaatsen, waarin hoogwaardige echte haren worden ingevlochten.</value>
  </data>
  <data name="HighlinesIntroText2" xml:space="preserve">
    <value>Indien gewenst kan een andere kleur van extra strengen gekozen worden om een aantrekkelijk kleureffect te creëren.</value>
  </data>
  <data name="HighlinesTitle" xml:space="preserve">
    <value>Hairdreams Volume+ HighLines</value>
  </data>
  <data name="IntroText" xml:space="preserve">
    <value>Met het Volume+ gamma van Hairdreams kunt u onmiddellijk volume geven aan dun en schaars haar. Het gamma biedt verschillende mogelijkheden voor volumecreatie en kan voor elke individuele situatie een oplossing bieden, van normaal en dun haar tot schaars haar.</value>
  </data>
  <data name="IntroText2" xml:space="preserve">
    <value>Dankzij Hairdreams kunnen de mensen die worstelen met het probleem van plaatselijke kaalheid van dik haar genieten, zelfs in het geval van gevorderde haaruitval. Eigen haar wordt aangevuld en verdikt met hoogwaardig echt haar dat aan handmatige selectie werd onderworpen. Dit haar wordt afgestemd aan het eigen haar in termen van kleur, lengte en structuur om een om zo natuurlijk mogelijk resultaat te creëren. Het verbindingsproces verloopt op een wijze die zacht en onschadelijk is voor het haar. De klant voelt geen enkel verschil tussen haar eigen haar en toegevoegde haarstrengen en hoeft geen significante veranderingen in haar leefwijze door te voeren. Het extra volume is niet te onderscheiden van het natuurlijk haar van de klant.</value>
  </data>
  <data name="Microlines" xml:space="preserve">
    <value>Microlines</value>
  </data>
  <data name="MicrolinesIntroText" xml:space="preserve">
    <value>De MicroLines methode is ideaal geschikt om op natuurlijke wijze haar op het hoofd te verdikken, zelfs bij gevorderde haaruitval.</value>
  </data>
  <data name="MicrolinesIntroText2" xml:space="preserve">
    <value>MicroLines is een net gemaakt met vrijwel onzichtbare, speciale, zeer dunne garen, waarop hoogwaardig echt haar bevestigd zijn. Ze worden aan het haar van de klant toegepast in termen van kleur, lengte en structuur, dus ze worden op een onzichtbare manier gemengd met het haar van de klant. Het resultaat is een volledig natuurlijk kapsel dat niet van natuurlijk haar kan worden onderscheiden.</value>
  </data>
  <data name="MicrolinesTitle" xml:space="preserve">
    <value>Hairdreams Volume+ MicroLines</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Hairdreams haarverdikkingen</value>
  </data>
  <data name="TitleText" xml:space="preserve">
    <value>Hairdreams Volume+ Haarverdikking</value>
  </data>
  <data name="Tophair" xml:space="preserve">
    <value>Tophair</value>
  </data>
  <data name="TophairIntroText" xml:space="preserve">
    <value>De innovatieve TopHair methode van Hairdreams is snel, comfortabel en flexibel, en ideaal om snel en probleemlos dun en schaars haar op de bovenste gedeelte van het hoofd op te vullen. Door het speciale ontwerp is het perfect om lang haar te verkrijgen alsook kapsels met een scheiding.</value>
  </data>
  <data name="TophairIntroText2" xml:space="preserve">
    <value>Het wordt gemaakt uit een modern, ademend net met ingevlochten strengen van Hairdreams, dat wordt bevestigd aan het haar van de klant in het bovenste gedeelte van het hoofd. Andere strengen worden onzichbaar verbonden met eigen haar, waardoor de zachte en natuurlijke kapsels ontstaan met langere haren, evenals scheidingen en een pony.</value>
  </data>
  <data name="TophairTitle" xml:space="preserve">
    <value>Hairdreams Volume+ Top Hair</value>
  </data>
  <data name="VolumeHairdreams" xml:space="preserve">
    <value>Volume+ Hairdreams</value>
  </data>
  <data name="VolumeHairdreamsText" xml:space="preserve">
    <value>Droomvolume verkregen door de HAIRDREAMS methode van haarverlenging en -verdikking</value>
  </data>
  <data name="VolumeHighlinesHairdreamsHow" xml:space="preserve">
    <value>Volume+ HighLines – hoe het werkt:</value>
  </data>
  <data name="VolumeHighlinesHairdreamsHowText" xml:space="preserve">
    <value>De Highlines is vast bevestigd aan de bovenkant van het hoofd met een speciale lijm. De haren van de klant door het net geweven en worden mooi gemengd met de strengen van Hairdreams. Deze methode maakt het mogelijk om nagenoeg elk kapsel te creëren dat dik haar in het bovenste gedeelte van het hoofd vereist. Een draagperiode van HighLines is ca. 6-8 maanden.</value>
  </data>
  <data name="VolumeMicrolinesHairdreamsHow" xml:space="preserve">
    <value>Volume+ MicroLines – hoe het werkt:</value>
  </data>
  <data name="VolumeMicrolinesHairdreamsHowText" xml:space="preserve">
    <value>De MicroLines methode verdikt het haar van de klant met een vrijwel onzichtbaar fijn haarnet. Speciale garen gemaakt van kristallijn polymeer worden voorzichtig maar stevig in haar bevestigd, waarop de hoogwaardige echte haren verbonden worden, die in kleur en haarlengte aan klant haar haar worden aangepast. Zo krijgt het haar van de klant een meer natuurlijk volume op het hoofd. Der daagperiode van MicroLines is ca. 6-8 maanden.</value>
  </data>
  <data name="VolumeTophairHairdreamsHow" xml:space="preserve">
    <value>Volume+ TopHair – hoe het werkt:</value>
  </data>
  <data name="VolumeTophairHairdreamsHowText" xml:space="preserve">
    <value>De Hairdreams Tophair worden aan het haar van de cliënte in het bovenste gedeelte van het hoofd bevestigd met de klemmen. Deze methode maakt het mogelijk om het haar op deze plaatsen te verdikken en te verlengen en het maken van kapsels met nauwkeurige scheidingen. De cliënte kan ze zelf eenvoudig verwijderen en opnieuw opzetten. Tophair kan ook permanent bevestigd worden met behulp van een speciale lijm. De hechting dient dan om de 4-6 weken opnieuw te worden uitgevoerd ten gevolge van de uitgroei van het haar. Het stuk zelf kan 6-8 maanden gebruikt worden.</value>
  </data>
</root>